from typing import Protocol, Sequence, Any
from .types import MeshRef

class Logger(Protocol):
    def info(self, msg: str) -> None: ...
    def error(self, msg: str) -> None: ...
    def debug(self, msg: str) -> None: ...
    def warning(self, msg: str) -> None: ...

class MeshRepository(Protocol):
    def list_meshes_in(self, path: str) -> Sequence[MeshRef]: ...


# â†“ NEW rendering ports (VTK-ports)
class MeshReader(Protocol):
    """Read a VTU file into an opaque dataset (renderer-agnostic)."""
    def read_vtu(self, path: str) -> Any: ...

class MeshScene(Protocol):
    """Owns the 3D scene and mesh actors."""
    def add_dataset(self, dataset: Any, name: str) -> str: ...
    def set_visible(self, mesh_id: str, on: bool) -> None: ...
    def reset_camera(self) -> None: ...
    def fit_visible(self) -> None: ...